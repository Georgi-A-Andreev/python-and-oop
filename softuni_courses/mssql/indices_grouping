--problem 1

  SELECT COUNT(*)
      AS Count
    FROM WizzardDeposits

-- problem 2

  SELECT MAX(MagicWandSize)
      AS LongestMagicWand
    FROM WizzardDeposits

-- PROBLEM 3

  SELECT DepositGroup,
         MAX(MagicWandSize)
      AS LongestMagicWand
    FROM WizzardDeposits
GROUP BY DepositGroup

-- problem 4
  SELECT
   TOP 2 DepositGroup
    FROM
  (SELECT DepositGroup,
         AVG(MagicWandSize)
      AS aws
    FROM WizzardDeposits
GROUP BY DepositGroup)
      AS AvarageWandSize
ORDER BY aws

-- PROBLEM 5

  SELECT DepositGroup,
         SUM(DepositAmount)
      AS TotalSum
    FROM WizzardDeposits
GROUP BY DepositGroup

-- PROBLEM 6


   SELECT DepositGroup,
          SUM(DepositAmount)
     FROM WizzardDeposits
    WHERE MagicWandCreator = 'Ollivander family'
 GROUP BY DepositGroup

 -- PROBLEM 7

   SELECT DepositGroup,
          SUM(DepositAmount)
       AS TotalSum
     FROM WizzardDeposits
    WHERE MagicWandCreator = 'Ollivander family'
 GROUP BY DepositGroup
   HAVING SUM(DepositAmount) < 150000
 ORDER BY TotalSum DESC

 -- problem 8

   SELECT DepositGroup,
          MagicWandCreator,
          MIN(DepositCharge)
       AS MinDeposit
     FROM WizzardDeposits
 GROUP BY DepositGroup, MagicWandCreator
 ORDER BY MagicWandCreator

 -- problem 9


SELECT AgeGroup, COUNT(Id) AS WizardCount
            FROM(
            SELECT Id,
              CASE WHEN Age BETWEEN 0 AND 10 THEN '[0-10]'
                  WHEN Age BETWEEN 11 AND 20 THEN '[11-20]'
                  WHEN Age BETWEEN 21 AND 30 THEN '[21-30]'
                  WHEN Age BETWEEN 31 AND 40 THEN '[31-40]'
                  WHEN Age BETWEEN 41 AND 50 THEN '[41-50]'
                  WHEN Age BETWEEN 51 AND 60 THEN '[51-60]'
                  ELSE '[61+]'
              END AS AgeGroup
              FROM WizzardDeposits
          ) AS caseSubquery
GROUP BY caseSubquery.AgeGroup

SELECT * FROM WizzardDeposits

-- problem 10
SELECT * FROM(
  SELECT SUBSTRING(FirstName, 1, 1)
      AS FirstLetter
    FROM WizzardDeposits
   WHERE DepositGroup = 'Troll Chest'
) AS ttt
GROUP BY ttt.FirstLetter

  --problem 11
  SELECT * FROM (
    SELECT DepositGroup,
            IsDepositExpired,
            AVG(DepositInterest)
        AS AvarageInterest
      FROM WizzardDeposits
      WHERE DepositStartDate > '01/01/1985'
  GROUP BY DepositGroup, IsDepositExpired) AS t
  ORDER BY DepositGroup DESC, IsDepositExpired

  -- problem 12

SELECT tt.s - tt.s1 AS SumDifference FROM (
    SELECT SUM(w.DepositAmount) AS s, SUM(wd.DepositAmount) AS s1
      FROM WizzardDeposits
        AS w
      JOIN WizzardDeposits
        AS wd
        ON w.Id + 1 = wd.Id
) as tt

GO

USE SoftUni

GO

-- problem 13

  SELECT DepartmentID,
         SUM(Salary)
      AS TotalSalary
    FROM Employees
GROUP BY DepartmentID

-- problem 14

  SELECT DepartmentID,
         MIN(Salary)
      AS MinimulSalary
    FROM Employees
   WHERE DepartmentID IN (2, 5, 7) AND HireDate > '01/01/2000'
GROUP BY DepartmentID

-- problem 15

SELECT *
  INTO NewEmployess
  FROM Employees
  WHERE Salary > 30000

DELETE FROM NewEmployess
WHERE ManagerID = 42

UPDATE NewEmployess
SET Salary += 5000
WHERE DepartmentID = 1

SELECT DepartmentID, AVG(Salary) AS AverageSalary
  FROM NewEmployess
GROUP BY DepartmentID

-- problem 16


  SELECT DepartmentID,
         MAX(Salary)
      AS MaxSalary
    FROM Employees
GROUP BY DepartmentID
HAVING MAX(Salary) NOT BETWEEN 30000 AND 70000

-- PROBLEM 17

SELECT COUNT(*)
AS Count
FROM Employees
WHERE ManagerID IS NULL

