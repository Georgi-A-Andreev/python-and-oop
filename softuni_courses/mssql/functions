USE SoftUni

GO

--problem 1
SELECT FirstName, LastName
  FROM Employees
WHERE FirstName LIKE 'Sa%'

-- problem 2

SELECT FirstName, LastName FROM Employees
WHERE LastName LIKE '%ei%'

-- problem 3

SELECT FirstName FROM Employees
WHERE DepartmentID IN (3, 10) AND YEAR(HireDate) BETWEEN 1995 AND 2005

-- problem 4

SELECT FirstName, LastName
FROM Employees
WHERE LOWER(JobTitle) NOT LIKE '%engineer%'

-- problem 5

  SELECT [Name]
    FROM Towns
   WHERE LEN([Name]) IN (5, 6)
ORDER BY [Name]

-- problem 6

SELECT *
  FROM Towns
 WHERE LEFT([Name], 1) IN ('M', 'K',  'B', 'E')
ORDER BY [Name]

-- PROBLEM 7

SELECT *
  FROM Towns
WHERE LEFT([Name], 1) NOT IN ('R', 'B', 'D')
ORDER BY [Name]

-- PROBEM 8

CREATE VIEW V_EmployeesHiredAfter2000 AS
SELECT FirstName, LastName
  FROM Employees
 WHERE YEAR(HireDate) > 2000

 -- PROBLEM 9

 SELECT FirstName, LastName
   FROM Employees
  WHERE LEN(LastName) = 5

  -- PROBLEM 10

  SELECT EmployeeID,
        FirstName,
        LastName,
        Salary,
        DENSE_RANK() OVER (PARTITION BY Salary ORDER BY EmployeeID)
  FROM Employees
  WHERE Salary BETWEEN 10000 AND 50000
  ORDER BY Salary DESC

  -- PROBLEM 11

SELECT * FROM (
                 SELECT EmployeeID,
                       FirstName,
                       LastName,
                       Salary,
                       DENSE_RANK() OVER (PARTITION BY Salary ORDER BY EmployeeID)
                   AS  Rank
                 FROM Employees
                 WHERE Salary BETWEEN 10000 AND 50000
) AS ranking
WHERE Rank = 2
ORDER BY Salary DESC

-- problem 12

SELECT CountryName
    AS [Country Name],
       [IsoCode]
    AS [ISO Code]
  FROM Countries
 WHERE LOWER(CountryName) LIKE '%a%a%a%'
ORDER BY [ISO Code]

-- problem 13

GO
USE [Geography]
GO

SELECT p.PeakName,
       r.RiverName,
       CONCAT(LOWER(P.PeakName), SUBSTRING(LOWER(r.RiverName), 2, LEN(r.RiverName)))
    AS [Mix]
  FROM Peaks AS p,
       Rivers AS r
 WHERE RIGHT(p.PeakName, 1) = LEFT(LOWER(r.RiverName), 1)
 ORDER BY Mix


 GO

 USE Diablo

 GO

 -- PROBLEM 14

  SELECT
 TOP(50) [Name],
         FORMAT([Start], 'yyyy-MM-dd')
      AS [Start]
    FROM Games
   WHERE YEAR([Start]) BETWEEN 2011 AND 2012
ORDER BY [Start],
         [Name]

-- PROBLEM 15

  SELECT Username,
         SUBSTRING([Email], CHARINDEX('@', Email) + 1, LEN(Email))
      AS [Email Provider]
    FROM Users
ORDER BY [Email Provider],
         [Username]

GO
Use Diablo
GO

-- problem 16

  SELECT Username,
         IpAddress
    FROM Users
   WHERE IpAddress LIKE '___[.][1]%[.]%[.]___'
ORDER BY Username

-- PROBLEM 17

  SELECT [Name]
      AS Game,
    CASE
    WHEN DATEPART(HOUR, [Start]) BETWEEN 0 AND 11 THEN 'Morning'
    WHEN DATEPART(HOUR, [Start]) BETWEEN 12 AND 17 THEN 'Afternoon'
    WHEN DATEPART(HOUR, [Start]) BETWEEN 18 AND 23 THEN 'Evening'
     END
      AS [Part of the Day],
    CASE
    WHEN Duration <= 3 THEN 'Extra Short'
    WHEN Duration BETWEEN 4 AND 6 THEN 'Short'
    WHEN Duration > 6 THEN 'Long'
    ELSE 'Extra Long'
     END
      AS Duration
    FROM Games
ORDER BY [Name],
         Duration,
         [Part of the Day]

-- problem 18

USE Orders

GO

   SELECT ProductName,
          OrderDate,
          DATEADD(DAY, 3,  OrderDate)
       AS [Pay Due],
          DATEADD(MONTH, 1, OrderDate)
       AS [Deliver Due]
     FROM Orders

-- problem 19

SELECT OrderDate,
       DATEDIFF(second ,OrderDate, GETDATE())
    AS diff
  FROM Orders


