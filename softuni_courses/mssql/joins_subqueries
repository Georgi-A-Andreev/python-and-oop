 USE SoftUni

 GO

-- PROBLEM 1

  SELECT
   TOP 5 e.EmployeeID,
         e.JobTitle,
         e.AddressID,
         a.AddressText
    FROM Employees
      AS e
    JOIN Addresses
      AS a
      ON a.AddressID = e.AddressID
ORDER BY E.AddressID


-- PROBLEM 2

  SELECT
  TOP 50 e.FirstName,
         e.LastName,
         t.[Name]
      AS Town,
         a.AddressText
    FROM Employees
      AS e
    JOIN Addresses
      AS a
      ON e.AddressID = a.AddressID
    JOIN Towns
      AS t
      ON t.TownID = a.TownID
ORDER BY e.FirstName, e.LastName

-- problem 3

  SELECT e.EmployeeID,
         e.FirstName,
         e.LastName,
         d.[Name]
      AS DepartmentName
    FROM Employees
      AS e
    JOIN Departments
      AS d
      ON e.DepartmentID = d.DepartmentID
   WHERE d.[Name] = 'Sales'
ORDER BY e.EmployeeID

-- problem 4

  SELECT
   TOP 5 e.EmployeeID,
         e.FirstName,
         e.Salary,
         d.[Name]
      AS DepartmentName
    FROM Employees
      AS e
    JOIN Departments
      AS d
      ON e.DepartmentID = d.DepartmentID
   WHERE e.Salary > 15000
ORDER BY e.DepartmentID

-- problem 5

    SELECT
     TOP 3 e.EmployeeID,
           e.FirstName
      FROM Employees
        AS e
 LEFT JOIN EmployeesProjects
        AS ep
        ON e.EmployeeID = ep.EmployeeID
     WHERE ep.ProjectID IS NULL
  ORDER BY e.EmployeeID

-- PROBLEM 6

  SELECT e.FirstName,
         e.LastName,
         e.HireDate,
         d.[Name]
      AS DeptName
    FROM Employees
      AS e
    JOIN Departments
      AS d
      ON e.DepartmentID = d.DepartmentID
   WHERE e.HireDate > '1-1-1999' AND d.[Name] IN ('Sales', 'Finance')
ORDER BY e.HireDate

--problem 7

  SELECT
   TOP 5 e.EmployeeID,
         e.FirstName,
         p.[Name]
      AS ProjectName
    FROM Employees
      AS e
    JOIN EmployeesProjects
      AS ep
      ON e.EmployeeID = ep.EmployeeID
    JOIN Projects
      AS p
      ON p.ProjectID = ep.ProjectID
   WHERE p. StartDate > '08-13-2002' AND p.EndDate IS NULL

   -- problem 8

  SELECT e.EmployeeID,
         e.FirstName,

    CASE WHEN YEAR(p.StartDate) >= 2005 THEN NULL
    ELSE p.Name
  END AS ProjectName
    FROM Employees
      AS e
    JOIN EmployeesProjects
      AS ep
      ON e.EmployeeID = ep.EmployeeID
    JOIN Projects
      AS p
      ON p.ProjectID = ep.ProjectID
   WHERE e.EmployeeID = 24

   -- problem 9

  SELECT e.EmployeeID,
         e.FirstName,
         e.ManagerID,
         m.FirstName
      AS ManagerName
    FROM Employees
      AS e
    JOIN Employees
      AS m
      ON m.EmployeeID = e.ManagerID
   WHERE e.ManagerID IN (3, 7)
ORDER BY e.EmployeeID

-- problem 10

    SELECT
    TOP 50 e.EmployeeID,
           CONCAT(e.FirstName, ' ', e.LastName)
        AS EmployeeName,
           CONCAT(m.FirstName, ' ', m.LastName)
        AS ManagerName,
           d.[Name]
        AS DepartmentName
      FROM Employees
        AS e
RIGHT JOIN Employees
        AS m
        ON m.EmployeeID = e.ManagerID
      JOIN Departments
        AS d
        ON e.DepartmentID = d.DepartmentID
  ORDER BY e.EmployeeID

  -- problem 11

    SELECT
     TOP 1   AVG(Salary)
        AS MinAvarageSalary
      FROM Employees
  GROUP BY DepartmentID
  ORDER BY MinAvarageSalary

GO

USE [Geography]

GO

-- problem 12

  SELECT c.CountryCode,
         m.MountainRange,
         p.PeakName,
         p.Elevation
    FROM MountainsCountries
      AS mc
    JOIN Countries
      AS c
      ON mc.CountryCode = c.CountryCode
    JOIN Mountains
      AS m
      ON m.Id = mc.MountainId
    JOIN Peaks
      AS p
      ON P.MountainId = m.Id
   WHERE c.CountryName = 'Bulgaria' AND p.Elevation > 2835
ORDER BY p.Elevation DESC

-- problem 13

  SELECT c.CountryCode,
         COUNT(m.MountainRange)
      AS MountainRanges
    FROM Countries
      AS c
    JOIN MountainsCountries
      AS mc
      ON c.CountryCode = mc.CountryCode
    JOIN Mountains
      AS m
      ON m.Id = mc.MountainId
   WHERE c.CountryName IN ('United States', 'Russia', 'Bulgaria')
GROUP BY c.CountryCode

-- problem 14

    SELECT
     TOP 5 c.CountryName,
           r.RiverName
      FROM Countries
        AS c
 LEFT JOIN CountriesRivers
        AS cr
        ON c.CountryCode = cr.CountryCode
 LEFT JOIN Rivers
        AS r
        ON r.Id = cr.RiverId
      JOIN Continents
        AS co
        ON co.ContinentCode = c.ContinentCode
     WHERE co.ContinentName = 'Africa'
  ORDER BY c.CountryName

  -- problem 15

  -- ****************

  -- problem 16

    SELECT COUNT(*)
        AS Count
      FROM Countries
        AS c
 LEFT JOIN MountainsCountries
        AS mc
        ON mc.CountryCode = c.CountryCode
 LEFT JOIN Mountains
        AS m
        ON M.Id = mc.MountainId
     WHERE MountainRange IS NULL

-- problem 17

   SELECT
    TOP 5 c.CountryName,
          MAX(p.Elevation)
       AS HighestPeakElevation,
          MAX(r.Length)
       AS LongestRiverLength
     FROM Countries
       AS c
LEFT JOIN CountriesRivers
       AS cr
       ON c.CountryCode = cr.CountryCode
LEFT JOIN Rivers
       AS r
       ON r.Id = cr.RiverId
LEFT JOIN MountainsCountries
       AS mc
       ON mc.CountryCode = c.CountryCode
LEFT JOIN Mountains
       AS m
       ON m.Id = mc.MountainId
LEFT JOIN Peaks
       AS p
       ON p.MountainId = m.Id
 GROUP BY c.CountryName
 ORDER BY HighestPeakElevation DESC,
          LongestRiverLength DESC,
          c.CountryName

-- problem 18


