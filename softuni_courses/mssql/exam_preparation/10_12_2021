-- EXAM 10 DEC 2021

 USE master
GO

USE Airport

GO

CREATE TABLE Passengers(
    Id INT PRIMARY KEY IDENTITY,
    FullName VARCHAR(100) UNIQUE NOT NULL,
    Email VARCHAR(50) UNIQUE NOT NULL
)

CREATE TABLE Pilots(
    Id INT PRIMARY KEY IDENTITY,
    FirstName VARCHAR(30) UNIQUE NOT NULL,
    LastName VARCHAR(30) UNIQUE NOT NULL,
    Age TINYINT NOT NULL, CONSTRAINT ck_age CHECK (Age BETWEEN 21 AND 62),
    Rating FLOAT , CONSTRAINT ck_rating CHECK (Rating BETWEEN 0.0 AND 10.0)
)

CREATE TABLE AircraftTypes(
    Id INT PRIMARY KEY IDENTITY,
    TypeName VARCHAR(30) UNIQUE NOT NULL
)

CREATE TABLE Aircraft(
    Id INT PRIMARY KEY IDENTITY,
    Manufacturer VARCHAR(25) NOT NULL,
    Model VARCHAR(30) NOT NULL,
    [Year] INT NOT NULL,
    FlightHours INT,
    Condition CHAR(1) NOT NULL,
    TypeId INT FOREIGN KEY REFERENCES AircraftTypes(Id) NOT NULL
 )

 CREATE TABLE PilotsAircraft(
     AircraftId INT FOREIGN KEY REFERENCES Aircraft(Id) NOT NULL,
     PilotId INT FOREIGN KEY REFERENCES Pilots(Id) NOT NULL,
     PRIMARY KEY (AircraftId, PilotId)
 )

 CREATE TABLE Airports(
     Id INT PRIMARY KEY IDENTITY,
     AirportName VARCHAR(70) UNIQUE NOT NULL,
     Country VARCHAR(100) UNIQUE NOT NULL
 )

 CREATE TABLE FlightDestinations(
     Id INT PRIMARY KEY IDENTITY,
     AirportId INT FOREIGN KEY REFERENCES AirporTs(Id) NOT NULL,
     [Start] DATETIME NOT NULL,
     AircraftId INT FOREIGN KEY REFERENCES Aircraft(Id) NOT NULL,
     PassengerId INT FOREIGN KEY REFERENCES Passengers(Id) NOT NULL,
     TicketPrice DECIMAL(18,2) NOT NULL DEFAULT 15
 )

 -- PROBLEM 2



INSERT INTO Passengers(FullName, Email)

 SELECT CONCAT(FirstName, ' ', LastName),
        CONCAT(FirstName, LastName, '@gmail.com')
   FROM Pilots
  WHERE Id BETWEEN 5 AND 15

-- PROBLEM 3

UPDATE Aircraft
SET Condition = 'A'
WHERE Condition IN ('C', 'B') AND (FlightHours IS NULL OR FlightHours <= 100) AND [Year] >= 2013

-- PROBLEM 4

DELETE FROM Passengers
WHERE LEN(FullName) <= 10

-- PROBLEM 5

  SELECT Manufacturer,
         Model,
         FlightHours,
         Condition
    FROM Aircraft
ORDER BY FlightHours DESC

-- PROBLEM 6

     SELECT p.FirstName,
            p.LastName,
            a.Manufacturer,
            a.Model,
            a.FlightHours
       FROM Pilots
         AS p
       JOIN PilotsAircraft
         AS pa
         ON p.Id = pa.PilotId
       JOIN Aircraft
         AS a
         ON a.Id = pa.AircraftId
      WHERE a.FlightHours <= 304
   ORDER BY a.FlightHours DESC,
            p.FirstName

-- PROBLEM 7

   SELECT TOP(20) fd.Id
       AS DestinationId,
          fd.[Start],
          p.FullName,
          a.AirportName,
          fd.TicketPrice
     FROM FlightDestinations
       AS fd
     JOIN Airports
       AS a
       ON fd.AirportId = a.Id
     JOIN Passengers
       AS p
       ON p.Id = fd.PassengerId
    WHERE DAY([Start]) % 2 = 0
 ORDER BY fd.TicketPrice DESC,
          a.AirportName

-- problem 8

        SELECT a.Id
            AS AircraftId,
               a.Manufacturer,
               AVG(FlightHours)
            AS FlightHours,
               COUNT(*)
            AS FlightDestinationsCount,
               ROUND(AVG(fd.TicketPrice), 2)
            AS AvgPrice
          FROM Aircraft
            AS a
     LEFT JOIN FlightDestinations
            AS fd
            ON fd.AircraftId = a.Id
      GROUP BY a.Id, a.Manufacturer
        HAVING COUNT(*) >= 2
      ORDER BY FlightDestinationsCount DESC,
               a.Id

-- problem 9

     SELECT p.FullName,
            COUNT(*)
         AS CountOfAircraft,
            SUM(FD.TicketPrice)
         AS TotalPaid
       FROM Passengers
         AS p
       JOIN FlightDestinations
         AS fd
         ON p.Id = fd.PassengerId
      WHERE CHARINDEX('a', p.FullName) = 2
   GROUP BY P.FullName
     HAVING COUNT(*) >= 2
   ORDER BY p.FullName

   -- problm 10

   SELECT a.AirportName,
          fd.[Start]
       AS DayTime,
          fd.TicketPrice,
          p.FullName,
          ac.Manufacturer,
          ac.Model
     FROM FlightDestinations
       AS fd
LEFT JOIN Airports
       AS a
       ON fd.AirportId = a.Id
LEFT JOIN Passengers
       AS p
       ON p.Id = fd.PassengerId
LEFT JOIN Aircraft
       AS ac
       ON ac.Id = fd.AircraftId
    WHERE DATEPART(HOUR,fd.[Start]) BETWEEN 6 AND 20 AND fd.TicketPrice > 2500
 ORDER BY ac.Model

 -- problem 11
GO

 CREATE FUNCTION udf_FlightDestinationsByEmail(@email VARCHAR(50))
 RETURNS INT
 AS
 BEGIN
        RETURN (
               SELECT COUNT(*)
                 FROM Passengers
                   AS p
                 JOIN FlightDestinations
                   AS fd
                   ON fd.PassengerId = p.Id
                WHERE p.Email = @email)
END

GO
SELECT dbo.udf_FlightDestinationsByEmail ('PierretteDunmuir@gmail.com')

SELECT dbo.udf_FlightDestinationsByEmail('Montacute@gmail.com')

-- PROBLEM 12
GO

CREATE PROCEDURE usp_SearchByAirportName @airportName VARCHAR(70)
AS
BEGIN
        SELECT a.AirportName,
               p.FullName,
               CASE WHEN fd.TicketPrice <= 400 THEN 'Low'
                    WHEN fd.TicketPrice BETWEEN 401 AND 1500 THEN 'Medium'
                    ELSE 'High'
                END
            AS LevelOfTickerPrice,
               ac.Manufacturer,
               ac.Condition,
               at.TypeName
          FROM Airports
            AS a
          JOIN FlightDestinations
            AS fd
            ON fd.AirportId = a.Id
          JOIN Passengers
            AS p
            ON p.Id = fd.PassengerId
          JOIN Aircraft
            AS ac
            ON ac.Id = fd.AircraftId
          JOIN AircraftTypes
            AS [at]
            ON [at].Id = ac.TypeId
         WHERE  a.AirportName = @airportName
      ORDER BY ac.Manufacturer,
               p.FullName
END

GO

EXEC usp_SearchByAirportName 'Sir Seretse Khama International Airport'

