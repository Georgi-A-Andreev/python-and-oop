-- problem 1

CREATE TABLE mountains
(
	id SERIAL PRIMARY KEY,
	name VARCHAR(50)
);

CREATE TABLE peaks(
	id SERIAL PRIMARY KEY,
	name VARCHAR(50),
	mountain_id INT,
	CONSTRAINT fk_peaks_mountains
		FOREIGN KEY (mountain_id)
			REFERENCES mountains(id)
)

-- problem 2

SELECT v.driver_id,
		v.vehicle_type,
		CONCAT(c.first_name, ' ', c.last_name) AS driver_name
FROM campers AS c
JOIN vehicles AS v
ON c.id = v.driver_id

-- problem 3

SELECT r.start_point,
		r.end_point,
		c.id AS leader_id,
		CONCAT(c.first_name, ' ', c.last_name) AS leader_name
FROM routes AS r
JOIN campers AS c
ON r.leader_id = c.id

-- problem 4


CREATE TABLE mountains(
	id serial PRIMARY KEY,
	name VARCHAR(50)
);

CREATE TABLE peaks(
	id SERIAL PRIMARY KEY,
	name VARCHAR(50),
	mountain_id int,
	CONSTRAINT fk_mountain_id
		FOREIGN KEY (mountain_id)
			REFERENCES mountains(id)
				ON DELETE CASCADE
)

-- problem 3

CREATE TABLE passports(
	id INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 100 INCREMENT 1) PRIMARY KEY,
	nationality VARCHAR(50)
);

INSERT INTO passports(nationality)
VALUES
('N34FG21B'),
('K65LO4R7'),
('ZE657QP2' );

CREATE TABLE people(
	id SERIAL PRIMARY KEY,
	first_name VARCHAR(50),
	salary DECIMAL(10,2),
	passport_id INT,
	CONSTRAINT "fk_people_passports"
		FOREIGN KEY (passport_id)
			REFERENCES passports (id)
);

INSERT INTO people(first_name, salary, passport_id)
VALUES
('Roberto', 43300.0000, 101),
('Tom', 56100.0000, 102),
('Yana', 60200.0000, 100)









