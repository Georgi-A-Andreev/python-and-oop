-- problem 1

CREATE TABLE owners (
	id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	name VARCHAR(50) NOT NULL,
	phone_number VARCHAR(15) NOT NULL,
	address VARCHAR(50)
);

CREATE TABLE animal_types(
	id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	animal_type VARCHAR(30) NOT NULL
);

CREATE TABLE cages(
	id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	animal_type_id INT NOT NULL,
	CONSTRAINT fk_cages_animal_types
	FOREIGN KEY (animal_type_id)
	REFERENCES animal_types(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE
);

CREATE TABLE animals(
	id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	name VARCHAR(30) NOT NULL,
	birthdate DATE NOT NULL,
	owner_id INT,
	animal_type_id INT NOT NULL,
	CONSTRAINT fk_animals_owners
	FOREIGN KEY (owner_id)
	REFERENCES owners(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	CONSTRAINT fk_animals_animal_types
	FOREIGN KEY (animal_type_id)
	REFERENCES animal_types(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE
);

CREATE TABLE volunteers_departments(
	id SERIAL PRIMARY KEY,
	department_name VARCHAR(30) NOT NULL
);

CREATE TABLE volunteers(
	id SERIAL PRIMARY KEY,
	name VARCHAR(50) NOT NULL,
	phone_number VARCHAR(15) NOT NULL,
	address VARCHAR(50),
	animal_id INT,
	department_id INT NOT NULL,
	CONSTRAINT fk_volunteers_animals
	FOREIGN KEY (animal_id)
	REFERENCES animals(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	CONSTRAINT fk_volunteers_volunteers_departments
	FOREIGN KEY (department_id)
	REFERENCES volunteers_departments(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE
);

CREATE TABLE animals_cages(
	cage_id INT NOT NULL,
	animal_id INT NOT NULL,
	CONSTRAINT fk_animals_cages_cages
	FOREIGN KEY (cage_id)
	REFERENCES cages("id")
	ON DELETE CASCADE
	ON UPDATE CASCADE,
  CONSTRAINT fk_animals_cages_animals
	FOREIGN KEY (animal_id)
	REFERENCES animals("id")
	ON DELETE CASCADE
	ON UPDATE CASCADE
);

-- problem 2

INSERT INTO animals(name, birthdate, owner_id, animal_type_id)
VALUES
('Giraffe',	'2018-09-21',	21,	1),
('Harpy Eagle',	'2015-04-17',	15,	3),
('Hamadryas Baboon',	'2017-11-02',	NULL,	1),
('Tuatara',	'2021-06-30',	2,	4);

INSERT INTO volunteers(name, phone_number, address, animal_id, department_id)
VALUES
('Anita Kostova',	'0896365412',	'Sofia, 5 Rosa str.',	15,	1),
('Dimitur Stoev',	'0877564223',	NULL,	42,	4),
('Kalina Evtimova',	'0896321112',	'Silistra, 21 Breza str.',	9,	7),
('Stoyan Tomov',	'0898564100',	'Montana, 1 Bor str.',	18,	8),
('Boryana Mileva',	'0888112233',	NULL,	31,	5);

-- problem 3

UPDATE animals
SET owner_id = 4
WHERE owner_id IS NULL

-- problem 4

DELETE FROM volunteers
WHERE department_id = 2;

DELETE FROM volunteers_departments
WHERE department_name = 'Education program assistant';

-- problem 5

SELECT name,
	phone_number,
	address,
	animal_id,
	department_id
FROM
	volunteers
ORDER BY name, animal_id, department_id


-- problem 6

SELECT a.name,
		at.animal_type,
		TO_CHAR(a.birthdate, 'DD.MM.YYYY') AS birthdate
FROM animals AS a
JOIN animal_types AS at
ON a.animal_type_id = at.id
ORDER BY a.name

-- problem 7

SELECT o.name AS owner,
		COUNT(*) AS count_of_animals
FROM owners AS o
JOIN animals AS a
ON a.owner_id = o.id
GROUP BY o.name
ORDER BY count_of_animals DESC, owner
LIMIT 5

-- problem 8

SELECT CONCAT(o.name, ' - ', a.name) AS "Owners - Animals",
		o.phone_number AS "Phone Number",
		ac.cage_id AS "Cage ID"
FROM owners AS o
JOIN animals AS a
ON o.id = a.owner_id
JOIN animal_types AS at
ON at.id = a.animal_type_id
JOIN animals_cages AS ac
ON ac.animal_id = a.id
WHERE at.animal_type = 'Mammals'
ORDER BY o.name, a.name DESC


-- problem 9

SELECT v.name,
		v.phone_number,
	TRIM(', ' FROM TRIM(TRIM('Sofia' FROM TRIM(v.address)))) AS address
FROM volunteers AS v
JOIN volunteers_departments AS vd
ON vd.id = v.department_id
WHERE vd.department_name = 'Education program assistant'
AND v.address LIKE '%Sofia%'
ORDER BY v.name

-- problem 10

SELECT a.name,
		EXTRACT(YEAR FROM a.birthdate) AS birth_year,
		at.animal_type
FROM animals AS a
JOIN animal_types AS at
ON a.animal_type_id = at.id
WHERE a.birthdate > '01/01/2017' AND at.animal_type NOT LIKE 'Birds' AND a.owner_id IS NULL
ORDER BY a.name

-- problem 11

CREATE FUNCTION fn_get_volunteers_count_from_department(searched_volunteers_department VARCHAR(30))
RETURNS INT
AS
$$
DECLARE total INT;
BEGIN
	 SELECT COUNT(*) INTO total
				  	FROM volunteers AS v
				  	JOIN volunteers_departments AS vd
				  	ON vd.id = v.department_id
				 	WHERE vd.department_name = searched_volunteers_department;
	RETURN total;
END;
$$
LANGUAGE plpgsql;

-- problem 12

CREATE PROCEDURE sp_animals_with_owners_or_not(IN animal_name VARCHAR(30), OUT ownerx2 VARCHAR)
AS
$$
DECLARE owner INT DEFAULT NULL;
BEGIN
				SELECT owner_id INTO owner
				FROM animals
				WHERE name = animal_name;
			IF owner IS NULL THEN ownerx2 := 'For adoption';
			ELSE SELECT name INTO ownerx2
					FROM owners
					WHERE id = owner;
			END IF;

END;
$$
LANGUAGE plpgsql;


CALL sp_animals_with_owners_or_not('Pumpkinseed Sunfish')
CALL sp_animals_with_owners_or_not('Hippo')
CALL sp_animals_with_owners_or_not('Brown bear')












