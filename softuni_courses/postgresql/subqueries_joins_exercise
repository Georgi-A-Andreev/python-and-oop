-- problem 1

SELECT CONCAT(a.address, ' ', a.address_2) AS apartment_address,
		b.booked_for AS nights
FROM apartments AS a
JOIN bookings AS b
ON a.booking_id = b.booking_id
ORDER BY a.apartment_id

-- problem 2

SELECT a.name,
		a.country,
		DATE(b.booked_at) AS booked_at
FROM apartments AS a
LEFT JOIN bookings AS b
ON a.booking_id = b.booking_id
LIMIT 10

-- problem 3

SELECT b.booking_id,
		DATE(b.starts_at) AS starts_at,
		b.apartment_id,
		CONCAT(c.first_name, ' ', c.last_name) AS customer_name
FROM bookings AS b
RIGHT JOIN customers as c
ON b.customer_id = c.customer_id
ORDER BY customer_name
LIMIT 10

-- problem 4

SELECT b.booking_id,
		a.name AS apartment_owner,
		a.apartment_id,
		CONCAT(c.first_name, ' ', c.last_name) AS customer_name
FROM customers AS c
FULL JOIN bookings AS b
ON c.customer_id = b.customer_id
FULL JOIN apartments AS a
ON b.booking_id = a.booking_id
ORDER BY b.booking_id, apartment_owner, customer_name

-- problem 6

SELECT b.booking_id,
		b.apartment_id,
		c.companion_full_name
FROM bookings AS b
JOIN customers AS c
ON b.customer_id = c.customer_id
WHERE b.apartment_id IS NULL

-- problem 7


SELECT a.apartment_id,
		b.booked_for,
		c.first_name,
		c.country
FROM apartments AS a
RIGHT JOIN bookings AS b
ON a.apartment_id = b.apartment_Id
JOIN customers AS c
ON b.customer_id = c.customer_id
WHERE c.job_type = 'Lead'

-- problem 8

SELECT COUNT(*) AS count
FROM bookings AS b
JOIN customers as c
ON b.customer_id = c.customer_id
WHERE c.last_name = 'Hahn'

-- problem 9

SELECT a.name,
		SUM(b.booked_for) AS sum
FROM apartments AS a
JOIN bookings AS b
ON b.apartment_id = a.apartment_id
GROUP BY a.name
ORDER BY a.name

-- problem 10

SELECT a.country,
		COUNT(b.booking_id) AS bookings_count
FROM apartments AS a
JOIN bookings AS b
ON a.apartment_Id = b.apartment_id
WHERE b.booked_at > '2021-05-18 07:52:09.904+03' AND b.booked_at < '2021-09-17 19:48:02.147+03'
GROUP BY a.country
ORDER BY COUNT(b.booking_id) DESC

-- problem 11

SELECT c.country_code,
		m.mountain_range,
		p.peak_name,
		p.elevation
FROM countries AS c
JOIN mountains_countries AS mc
ON c.country_code = mc.country_code
JOIN mountains as m
ON m.id = mc.mountain_id
JOIN peaks AS p
ON p.mountain_id = m.id
WHERE c.country_code = 'BG' AND p.elevation > 2835
ORDER BY p.elevation DESC

problem 12

SELECT c.country_code,
		COUNT(mc.mountain_id) AS mountain_range_count
FROM countries AS c
JOIN mountains_countries as mc
ON c.country_code = mc.country_code
WHERE c.country_code IN ('BG', 'RU', 'US')
GROUP BY c.country_code
ORDER BY mountain_range_count DESC

-- problem 13

SELECT c.country_name,
		r.river_name
FROM countries AS c
LEFT JOIN countries_rivers AS cr
ON cr.country_code = c.country_code
LEFT JOIN rivers AS r
ON cr.river_id = r.id
JOIN continents as co
ON co.continent_code = c.continent_code
WHERE co.continent_name = 'Africa'
ORDER BY c.country_name
LIMIT 5

-- problem 14

SELECT AVG(c.area_in_sq_km) AS min_average_area
FROM countries AS c
JOIN continents AS co
ON c.continent_code = co.continent_code
GROUP BY co.continent_name
ORDER BY min_average_area
LIMIT 1

-- problem 15

SELECT COUNT(*)
FROM countries as c
LEFT JOIN mountains_countries as mc
ON mc.country_code = c.country_code
LEFT JOIN mountains as m
ON mc.mountain_id = m.id
WHERE m.mountain_range IS NULL













