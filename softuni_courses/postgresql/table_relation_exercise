-- problem 1

CREATE TABLE products(
	product_name VARCHAR(100)
);

INSERT INTO products
VALUES
('Broccoli'),
('Shampoo'),
('Toothpaste'),
('Candy');

ALTER TABLE products
ADD COLUMN id SERIAL PRIMARY KEY;

-- problem 2

ALTER TABLE products
DROP CONSTRAINT "products_pkey"

-- problem 4

CREATE TABLE manufacturers(
	id SERIAL PRIMARY KEY,
	name VARCHAR(50)
);

CREATE TABLE models(
	id INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1000 INCREMENT 1) PRIMARY KEY,
	model_name VARCHAR(50),
	manufacturer_id INT,
	CONSTRAINT fk_models_manufacturers
		FOREIGN KEY (manufacturer_id)
			REFERENCES manufacturers(id)
);

CREATE TABLE production_years(
	id SERIAL PRIMARY KEY,
	established_on DATE,
	manufacturer_id INT,
	CONSTRAINT fk_production_years_manufacturers
		FOREIGN KEY (manufacturer_id)
			REFERENCES manufacturers(id)
);

INSERT INTO manufacturers(name)
VALUES
('BMW'),
('Tesla'),
('Lada');

INSERT INTO models(model_name, manufacturer_id)
VALUES
('X1', 1),
('i6', 1),
('Model S', 2),
('Model X', 2),
('Model 3', 2),
('Nova', 3);

INSERT INTO production_years(established_on, manufacturer_id)
VALUES
('1916-03-01', 1),
('2003-01-01', 2),
('1966-05-01', 3);

-- problem 8

CREATE TABLE students(
	id SERIAL PRIMARY KEY,
	student_name VARCHAR(50)
);

CREATE TABLE exams(
	id INT GENERATED ALWAYS AS IDENTITY (START WITH 101 INCREMENT 1) PRIMARY KEY,
	exam_name VARCHAR(50)
);

CREATE TABLE study_halls(
	id SERIAL PRIMARY KEY,
	study_hall_name VARCHAR(150),
	exam_id INT,
	CONSTRAINT fk_study_halls_exams
		FOREIGN KEY (exam_id)
			REFERENCES exams(id)
);

CREATE TABLE students_exams(
	student_id INT,
	exam_id INT,
	CONSTRAINT pk_students_exams
	PRIMARY KEY (student_id, exam_id),

	CONSTRAINT fk_students_exams_students
	FOREIGN KEY (student_id)
	REFERENCES students(id),

	CONSTRAINT fk_students_exams_exams
	FOREIGN KEY (exam_id)
	REFERENCES exams(id)
);

INSERT INTO students(student_name)
VALUES
('Mila'),
('Toni'),
('Ron');

INSERT INTO exams(exam_name)
VALUES
('Python Advanced'),
('Python OOP'),
('PostgreSQL');

INSERT INTO study_halls(study_hall_name, exam_id)
VALUES
('Open Source Hall',     102),
('Inspiration Hall',	101),
('Creative Hall',	103),
('Masterclass Hall',	103),
('Information Security Hall',	103);

INSERT INTO students_exams
VALUES
(1, 101),
(1,	102),
(2,	101),
(3,	103),
(2,	102),
(2,	103);














